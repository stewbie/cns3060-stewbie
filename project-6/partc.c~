#include <pthread.h>
#include <stdio.h>

int count = 0;
pthread_mutex_t plock = PTHREAD_MUTEX_INITIALIZER;

void* incrementCounter( void* m ) 
{ 

  int i; 
  for (i = 0; i < 10; ++i) 
  { 
    int tempValue = count; 
    sleep(1); 
    tempValue = tempValue + 1; 
    count = tempValue; 
  }
  pthread_mutex_unlock( &plock );
  return NULL; 
}

int main (char argc, char* argv[])
{

  pthread_t thread1, thread2, thread3, thread4;
  //part a
  pthread_create(&thread1, NULL, incrementCounter, NULL);
  pthread_create(&thread2, NULL, incrementCounter, NULL);
  pthread_create(&thread3, NULL, incrementCounter, NULL);
  pthread_create(&thread4, NULL, incrementCounter, NULL);
  //part b
  pthread_join(thread1, NULL);
  pthread_join(thread2, NULL);
  pthread_join(thread3, NULL);
  pthread_join(thread4, NULL);

  printf("%d\n", count);

  return 0;
}
